// <auto-generated />
using System;
using Crafted.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Crafted.Data.Migrations
{
    [DbContext(typeof(CraftedContext))]
    [Migration("20190522043802_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Crafted.Data.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId");

                    b.Property<int>("CategoryType");

                    b.Property<string>("ChangedBy");

                    b.Property<DateTimeOffset>("DateCreated");

                    b.Property<DateTimeOffset?>("DateModified");

                    b.Property<string>("ImageUrl");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Crafted.Data.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("ABV");

                    b.Property<bool>("Active");

                    b.Property<int?>("CategoryId");

                    b.Property<string>("ChangedBy");

                    b.Property<string>("Comment");

                    b.Property<DateTimeOffset>("DateCreated");

                    b.Property<DateTimeOffset?>("DateModified");

                    b.Property<string>("Description");

                    b.Property<int?>("IBU");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.Property<decimal?>("Price");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("Crafted.Data.Modification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChangedBy");

                    b.Property<DateTimeOffset>("DateCreated");

                    b.Property<DateTimeOffset?>("DateModified");

                    b.Property<string>("Description");

                    b.Property<int?>("ModificationCategoryId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ModificationCategoryId");

                    b.ToTable("Modifications");
                });

            modelBuilder.Entity("Crafted.Data.ModificationCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChangedBy");

                    b.Property<DateTimeOffset>("DateCreated");

                    b.Property<DateTimeOffset?>("DateModified");

                    b.Property<string>("Description");

                    b.Property<int?>("MaxRequired");

                    b.Property<int?>("MenuItemId");

                    b.Property<int?>("MinRequired");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.ToTable("ModificationCategories");
                });

            modelBuilder.Entity("Crafted.Data.Category", b =>
                {
                    b.HasOne("Crafted.Data.Category")
                        .WithMany("Categories")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("Crafted.Data.MenuItem", b =>
                {
                    b.HasOne("Crafted.Data.Category")
                        .WithMany("MenuItems")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("Crafted.Data.Modification", b =>
                {
                    b.HasOne("Crafted.Data.ModificationCategory")
                        .WithMany("Modifications")
                        .HasForeignKey("ModificationCategoryId");
                });

            modelBuilder.Entity("Crafted.Data.ModificationCategory", b =>
                {
                    b.HasOne("Crafted.Data.MenuItem")
                        .WithMany("ModificationCategories")
                        .HasForeignKey("MenuItemId");
                });
#pragma warning restore 612, 618
        }
    }
}
